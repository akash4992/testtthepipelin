name: build-deploy-go-api

on:
  push:
    branches:
      - develop
      - qa
      - staging
      - main

  workflow_dispatch:
    inputs:
      environment:
        required: true
        description: Select the environment
        type: choice
        options:
          - dev1
          - dev2
          - qa

permissions:
  id-token: write
  contents: write

env:
  IMAGE_TAG: latest
  AWS_REGION: "us-east-1"
  ENVIRONMENT_NAME: "${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || github.ref_name == 'main' && 'production' || github.ref_name == 'develop' && 'development' || github.ref_name }}"

jobs:
  build:
    name: Build and Deploy go-api
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || github.ref_name == 'main' && 'production' || github.ref_name == 'develop' && 'development' || github.ref_name }}

    steps:
      - name: Install Go Tools
        run: go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Check environment for ECS Values
        id: env-check
        run: |
          if [[ "${{ env.ENVIRONMENT_NAME }}" == "development" ]]; then
            echo "ECR_REPOSITORY=development-go-api" >> $GITHUB_ENV
            echo "ECS_CLUSTER=development-cluster" >> $GITHUB_ENV
            echo "SERVICE_NAME=dev-go-api" >> $GITHUB_ENV

          elif [[ "${{ env.ENVIRONMENT_NAME }}" == "dev2" ]]; then
            echo "ECR_REPOSITORY=dev2-app-api" >> $GITHUB_ENV
            echo "ECS_CLUSTER=development-cluster" >> $GITHUB_ENV
            echo "SERVICE_NAME=dev2-app-api" >> $GITHUB_ENV

          elif [[ "${{ env.ENVIRONMENT_NAME }}" == "qa" ]]; then
            echo "ECR_REPOSITORY=qa-go-api" >> $GITHUB_ENV
            echo "ECS_CLUSTER=qa-cluster" >> $GITHUB_ENV
            echo "SERVICE_NAME=qa-go-api" >> $GITHUB_ENV

          elif [[ "${{ env.ENVIRONMENT_NAME }}" == "staging" ]]; then
            echo "ECR_REPOSITORY=staging-go-api" >> $GITHUB_ENV
            echo "ECS_CLUSTER=staging-cluster" >> $GITHUB_ENV
            echo "SERVICE_NAME=staging-go-api" >> $GITHUB_ENV

          elif [[ "${{ env.ENVIRONMENT_NAME }}" == "production" ]]; then
            echo "ECR_REPOSITORY=prod-app-api" >> $GITHUB_ENV
            echo "ECS_CLUSTER=production-cluster" >> $GITHUB_ENV
            echo "SERVICE_NAME=prod-app-api" >> $GITHUB_ENV

          else
            echo "No valid environment specified"
            exit 1

      - name: Wait for ECS deployment to stabilize
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          CLUSTER_NAME: ${{ env.ECS_CLUSTER }}
          SERVICE_NAME: ${{ env.SERVICE_NAME }}
          REO_NAME: ${{ env.ECR_REPOSITORY }}
        run: |
          echo "AWS Region: ${AWS_REGION}"
          echo "Service Name: ${SERVICE_NAME}"
          echo "Repository Name: ${REO_NAME}"
          echo "Cluster Name: ${CLUSTER_NAME}"
